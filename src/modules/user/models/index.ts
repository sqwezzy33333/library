import { IsNotEmpty, IsString } from 'class-validator';import { ApiProperty } from '@nestjs/swagger';interface SharedUserModel {  id: string;  login: string;  password: string;  version: number;}export interface User extends SharedUserModel {  createdAt: number;  updatedAt: number;}export interface UserFromDb extends SharedUserModel{  createdAt: string;  updatedAt: string;}export class UserResponse {  @ApiProperty(    {      type: String,      default: '1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed',    }  )  id: string;  @ApiProperty(    {      type: String,      default: 'Sergei Kornev',    }  )  login: string;  @ApiProperty()  version: number;  @ApiProperty()  createdAt: number;  @ApiProperty()  updatedAt: number;}export class CreateUserDto {  @ApiProperty()  @IsNotEmpty()  @IsString()  login: string;  @ApiProperty()  @IsNotEmpty()  @IsString()  password: string;}export class UpdatePasswordDto {  @ApiProperty()  @IsNotEmpty()  @IsString()  oldPassword: string;  @ApiProperty()  @IsNotEmpty()  @IsString()  newPassword: string;}